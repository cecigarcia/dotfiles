#########################
# Tmux conf
#########################
## Change prefix combination
unbind C-b
set -g prefix C-a

## Start numbering at 1
set -g base-index 1
set-window-option -g pane-base-index 1

## Allows for faster key repetition
set -sg escape-time 0

## Show some colors!
set -g default-terminal "screen-256color"

# reload tmux config
unbind-key r
bind-key r source-file ~/.tmux.conf \; display 'Reloaded tmux config.'

# Movement bindings
set-window-option -g mode-keys vi
bind-key l choose-session

# Set default shell to fish
set-option -g default-shell /usr/local/bin/fish
set-option -ga terminal-overrides ",xterm-256color:Tc"

#########################
# Mouse
#########################
#set -g mouse on
#bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
#bind -n WheelDownPane select-pane -t= \; send-keys -Mo
setw -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"



#########################
# Copy mode
#########################
## clipboard to copy
bind C-c run "tmux save-buffer - | xclip -i -sel clipboard"
## clipboard to paste
bind C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer"

## Use vim keybindings in copy mode
setw -g mode-keys vi
## Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

## Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

## Vim-style copy/paste
unbind [
bind y copy-mode
unbind p
bind p paste-buffer
bind -t vi-copy H start-of-line
bind -t vi-copy L end-of-line
bind -t vi-copy v begin-selection
bind -t vi-copy V rectangle-toggle
bind -t vi-copy Escape cancel



#########################
# Pane navigation
#########################
bind-key -n C-Up select-pane -U
bind-key -n C-Right select-pane -R
bind-key -n C-Down select-pane -D
bind-key -n C-Left select-pane -L

## quick pane cycling
unbind C-j
bind C-j select-pane -t :.+



#########################
# Status bar
#########################
#set-window-option -g utf8 on
#set-option -g status-utf8 on
set -g status-left-length 32
set -g status-right-length 150
set -g status-interval 5

set -g status-left '#[fg=colour16,bg=colour254,bold] #S #[fg=colour254,bg=colour234,nobold]⮀'

set -g status-right "#[fg=colour128]⮃ %d %b #(date +%%H:%%M) #[fg=colour254,bg=colour234,nobold]#(rdio-current-track-tmux)⮂#[fg=colour16,bg=colour254,bold] #h "

set -g window-status-format "#[fg=white,bg=colour234] #I #W "
set -g window-status-current-format "#[fg=colour234,bg=colour200]⮀#[fg=colour16,bg=200,noreverse,bold] #I ⮁ #W #[fg=colour200,bg=colour234,nobold]⮀"


#########################
# Windows options
#########################
## Vim-like splits
bind-key s split-window -c "#{pane_current_path}"
bind-key v split-window -h -c "#{pane_current_path}"

## Open horizontal splits with the path set to the current
unbind-key %; bind-key % split-window -h -c "#{pane_current_path}"

## Open horizontal splits with the path set to the current
unbind-key '"'; bind-key '"' split-window -c "#{pane_current_path}"

## highlight active pane
## Dim unactive panes
setw -g window-style "bg=colour234"
# Hightlight active pane
setw -g window-active-style "bg=colour8"


#########################
# Styles
#########################
set -g status-fg white
set -g status-bg colour234
set -g window-status-activity-attr bold
set -g pane-border-fg colour245
set -g pane-active-border-fg colour39
set -g message-fg colour16
set -g message-bg colour221
set -g message-attr bold




### Fix problems with mac clipboard
### see http://robots.thoughtbot.com/post/19398560514/how-to-copy-and-paste-with-tmux-on-mac-os-x
#set-option -g default-command "reattach-to-user-namespace -l zsh"

### unset the rbenv environment version
#set-environment -gu RBENV_VERSION


